name: Generate typescript types
on:
  push:
    branches:
      - master
      - typescript-generate
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.CI_AWS_CLIENT_ID }}
  AWS_DEFAULT_REGION: "eu-west-1"
  AWS_SECRET_ACCESS_KEY: ${{ secrets.CI_AWS_CLIENT_SECRET }}
  NDLA_AWS_ECR_REPO: ${{ secrets.NDLA_AWS_ECR_REPO }}
  CI_RELEASE_ROLE: ${{ secrets.CI_RELEASE_ROLE }}
  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  NDLA_RELEASES: ${{ secrets.NDLA_RELEASES }}
  PACT_BROKER_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
  PACT_BROKER_URL: ${{ secrets.PACT_BROKER_URL }}
  PACT_BROKER_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
  KNOWIT_EMAIL: ${{ secrets.KNOWIT_EMAIL }}
jobs:
  generate_typescript:
    name: "Generate typescript types"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
      - name: Coursier cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: ${{ runner.OS }}-coursier-cache-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.OS }}-coursier-cache-${{ matrix.scala }}-${{ hashFiles('**/*.sbt') }}-
            ${{ runner.OS }}-coursier-cache-${{ matrix.scala }}-
            ${{ runner.OS }}-coursier-cache-
      - name: Ivy cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt/boot/
          key: ivy-cache-${{ hashFiles('~/.ivy2/cache/*') }}-${{ hashFiles('~/.sbt/boot/*') }}
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11
      - uses: actions/setup-node@v2
        with:
          node-version: '14.16'
      - name: "Login to ECR repo"
        run: RES=$(aws sts assume-role --role-arn $CI_RELEASE_ROLE --role-session-name github-actions-ecr-login)
          AWS_ACCESS_KEY_ID=$(echo $RES | jq -r .Credentials.AccessKeyId)
          AWS_SECRET_ACCESS_KEY=$(echo $RES | jq -r .Credentials.SecretAccessKey)
          AWS_SESSION_TOKEN=$(echo $RES | jq -r .Credentials.SessionToken)
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $NDLA_AWS_ECR_REPO
      - name: "Login to dockerhub"
        run: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - name: "Generate typescript types"
        run: sbt generateTypescript
      - name: "Commit typescript changes"
        continue-on-error: true
        run: |
          git config user.email "$KNOWIT_EMAIL"
          git config user.name "github-actions"

          git add typescript/index.ts
          git commit -m "AUTOMATION: Generated new typescript files"
          git push
      - name: "Cache tricks"
        run: |
          find $HOME/.ivy2 -name "ivydata-*.properties" -delete
          find $HOME/.sbt -name "*.lock" -delete
